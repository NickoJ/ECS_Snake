//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameFieldEntity { get { return GetGroup(GameMatcher.GameField).GetSingleEntity(); } }
    public GameFieldComponent gameField { get { return gameFieldEntity.gameField; } }
    public bool hasGameField { get { return gameFieldEntity != null; } }

    public GameEntity SetGameField(UnityEngine.Vector2Int newSize) {
        if (hasGameField) {
            throw new Entitas.EntitasException("Could not set GameField!\n" + this + " already has an entity with GameFieldComponent!",
                "You should check if the context already has a gameFieldEntity before setting it or use context.ReplaceGameField().");
        }
        var entity = CreateEntity();
        entity.AddGameField(newSize);
        return entity;
    }

    public void ReplaceGameField(UnityEngine.Vector2Int newSize) {
        var entity = gameFieldEntity;
        if (entity == null) {
            entity = SetGameField(newSize);
        } else {
            entity.ReplaceGameField(newSize);
        }
    }

    public void RemoveGameField() {
        gameFieldEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameFieldComponent gameField { get { return (GameFieldComponent)GetComponent(GameComponentsLookup.GameField); } }
    public bool hasGameField { get { return HasComponent(GameComponentsLookup.GameField); } }

    public void AddGameField(UnityEngine.Vector2Int newSize) {
        var index = GameComponentsLookup.GameField;
        var component = CreateComponent<GameFieldComponent>(index);
        component.size = newSize;
        AddComponent(index, component);
    }

    public void ReplaceGameField(UnityEngine.Vector2Int newSize) {
        var index = GameComponentsLookup.GameField;
        var component = CreateComponent<GameFieldComponent>(index);
        component.size = newSize;
        ReplaceComponent(index, component);
    }

    public void RemoveGameField() {
        RemoveComponent(GameComponentsLookup.GameField);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameField;

    public static Entitas.IMatcher<GameEntity> GameField {
        get {
            if (_matcherGameField == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameField);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameField = matcher;
            }

            return _matcherGameField;
        }
    }
}

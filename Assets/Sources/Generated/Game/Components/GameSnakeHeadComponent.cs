//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SnakeHeadComponent snakeHead { get { return (SnakeHeadComponent)GetComponent(GameComponentsLookup.SnakeHead); } }
    public bool hasSnakeHead { get { return HasComponent(GameComponentsLookup.SnakeHead); } }

    public void AddSnakeHead(System.Collections.Generic.List<GameEntity> newSegments) {
        var index = GameComponentsLookup.SnakeHead;
        var component = CreateComponent<SnakeHeadComponent>(index);
        component.segments = newSegments;
        AddComponent(index, component);
    }

    public void ReplaceSnakeHead(System.Collections.Generic.List<GameEntity> newSegments) {
        var index = GameComponentsLookup.SnakeHead;
        var component = CreateComponent<SnakeHeadComponent>(index);
        component.segments = newSegments;
        ReplaceComponent(index, component);
    }

    public void RemoveSnakeHead() {
        RemoveComponent(GameComponentsLookup.SnakeHead);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSnakeHead;

    public static Entitas.IMatcher<GameEntity> SnakeHead {
        get {
            if (_matcherSnakeHead == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SnakeHead);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSnakeHead = matcher;
            }

            return _matcherSnakeHead;
        }
    }
}
